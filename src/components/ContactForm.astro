---
// components/ContactForm.astro
import Icon from 'astro-icon';
---

<section id="contact" class="contact-section">
  <div class="form-container">
    <h2>Tell Us About Your Project ✨</h2>
    <p>Fill out the form below, and we’ll get back to you shortly to discuss your vision.</p>
    <form name="contact" method="POST" data-netlify="true">
      <input type="text" name="name" placeholder="Your Name" required />
      <input type="tel" name="phone" placeholder="Phone Number" required />
      <input type="email" name="email" placeholder="Email (optional)" />
      <textarea name="message" placeholder="Tell us about your project..." required></textarea>
      <button type="submit" class="action-button">
        <i class="fas fa-paper-plane"></i> Submit Your Inquiry
      </button>
    </form>
  </div>
  <div class="call-to-action">
    <div class="interactive-icons-container">
      <div class="draggable-icon" style="top: 20px; left: 20px; color: #ff00aa;">
        <i class="fa-solid fa-paint-roller" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 80px; left: 80px; color: #33FF57;">
        <i class="fa-solid fa-brush" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 140px; left: 10px; color: #3357FF;">
        <i class="fa-solid fa-paint-bucket" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 180px; left: 90px; color: #FFC300;">
        <i class="fa-solid fa-ruler" style="font-size: 48px;"></i>
      </div>
      <!-- New Icons -->
      <div class="draggable-icon" style="top: 50px; left: 150px; color: #FF33A6;">
        <i class="fa-solid fa-paint-can" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 90px; left: 50px; color: #33FFF5;">
        <i class="fa-solid fa-brick-wall" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 100px; left: 200px; color: #1d1c1c;">
        <i class="fa-solid fa-truck" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 150px; left: 250px; color: #8E44AD;">
        <i class="fa-solid fa-scissors" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 120px; left: 300px; color: #2ECC71;">
        <i class="fa-solid fa-ladder" style="font-size: 48px;"></i>
      </div>
      <div class="draggable-icon" style="top: 200px; left: 350px; color: #E74C3C;">
        <i class="fa-solid fa-tape" style="font-size: 48px;"></i>
      </div>
    </div>
    <h3>Ready to Talk Now?</h3>
    <p>Schedule a free call with our experts to discuss your project instantly.</p>
    <a
      href="#"
      class="action-button"
      onclick="Calendly.initPopupWidget({url: 'https://calendly.com/bahapainting-info/first-consultation-15-minutes'});return false;"
    >
      <i class="fas fa-phone-alt"></i> Book a Free Consultation
    </a>
  </div>
</section>

<style>
  /* Existing styles */
  .contact-section {
    background: #f9f9f9; /* Light gray background for cohesion */
    padding: 3rem 2rem;
    border-top: 1px solid #e0e0e0;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    justify-content: center;
    align-items: flex-start; /* Align items at the top */
  }

  .contact-section > div {
    flex: 1 1 300px;
    max-width: 400px;
    min-height: 515px; /* Set a consistent minimum height for both boxes */
    background: white; /* White background for contrast */
    padding: 1.5rem; /* Reduced padding */
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Space out content evenly */
  }

  /* Form Container Styles (unchanged) */
  .form-container h2 {
    color: #333;
    text-align: center;
  }

  .form-container p {
    margin-bottom: 0.8rem; /* Reduce spacing below the paragraph */
    color: #555;
    text-align: center;
  }

  form[name="contact"] {
    display: flex;
    flex-direction: column;
    gap: 0.8rem; /* Reduce spacing between form elements */
    overflow: hidden; /* Prevent the form from growing too large */
  }

  form input[type="text"],
  form input[type="tel"],
  form input[type="email"],
  form textarea {
    padding: 0.75rem;
    border: 1px solid #ccc;
    border-radius: 6px;
    font-size: 1rem;
  }

  form textarea {
    min-height: 80px; /* Reduce the height of the textarea */
    resize: none; /* Prevent resizing */
  }

  /* Action Buttons (Submit Inquiry & Book Consultation) */
  .action-button {
    background-color: black; /* Default black background */
    color: white; /* White text */
    border: none;
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem; /* Space between icon and text */
    opacity: 0.9; /* Dimmed by default */
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    text-decoration: none; /* Remove underline for links */
    min-width: 350px; /* Ensure both buttons have the same minimum width */
  }

  .action-button i {
    color: #035e5d; /* Green color for icons */
    font-size: 1.2rem; /* Slightly larger icon size */
  }

  .action-button:hover {
    background-color: #035e5d; /* Green background on hover */
    color: white;
    transform: translateY(-1px); /* Slight lift on hover */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Enhanced shadow */
  }

  .action-button:hover i {
    color: white; /* Icon color changes to white on hover */
  }

  /* Call to Action Styles */
  .call-to-action {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center content horizontally */
    text-align: center;
    justify-content: space-between; /* Space out icons and text */
  }

  /* Interactive Icons Container */
  .interactive-icons-container {
    position: relative;
    width: 100%;
    height: 330px; /* Adjust height as needed */
    overflow: hidden; /* Prevent icons from leaving the container */
  }

  /* Draggable Icons */
  .draggable-icon {
    position: absolute;
    cursor: grab;
    z-index: 10;
    animation: moveAround 10s infinite ease-in-out; /* Add playful animation */
    animation-duration: calc(8s + (2s * var(--random-duration))); /* Randomize duration */
    animation-delay: calc(-1s * var(--random-delay)); /* Randomize start delay */
  }

  .draggable-icon:hover {
    animation-play-state: paused; /* Pause animation on hover */
  }

  /* Keyframes for Random Movement */
  @keyframes moveAround {
    0% {
      transform: translate(0, 0);
    }
    20% {
      transform: translate(calc(-30px + 60px * var(--random-x)), calc(-30px + 60px * var(--random-y)));
    }
    40% {
      transform: translate(calc(50px * var(--random-x)), calc(-50px * var(--random-y)));
    }
    60% {
      transform: translate(calc(-40px * var(--random-x)), calc(40px * var(--random-y)));
    }
    80% {
      transform: translate(calc(30px * var(--random-x)), calc(-30px * var(--random-y)));
    }
    100% {
      transform: translate(0, 0);
    }
  }

  .call-to-action h3 {
    margin-bottom: 0.5rem;
    color: #035e5d;
  }

  .call-to-action p {
    margin-bottom: 1rem;
    color: #555;
  }

  .call-to-action a {
    display: inline-block;
    padding: 0.6rem 1.5rem;
    font-size: 1rem;
    gap: 0.5rem;
    text-decoration: none;
    border-radius: 6px;
    background-color: black;
    color: white;
    text-align: center;
    justify-content: center;
    align-items: center;
    transition: background-color 0.3s ease;
  }

  .call-to-action a:hover {
    background-color: #028a84;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .contact-section {
      flex-direction: column; /* Stack sections vertically */
      gap: 1.5rem;
    }

    .contact-section > div {
      max-width: 100%; /* Full width for smaller screens */
    }

    .call-to-action {
      align-items: center;
      text-align: center;
    }

    .interactive-icons-container {
      min-height: auto; /* Adjust height for stacked layout */
      margin-bottom: 1rem;
    }

    .draggable-icon {
      position: static; /* Icons flow normally on smaller screens */
      margin: 0.5rem;
    }
  }
</style>

<link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet">
<script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>

<script>
  const draggableIcons = document.querySelectorAll('.draggable-icon');
  const iconsContainer = document.querySelector('.interactive-icons-container');

  draggableIcons.forEach((icon) => {
    // Randomize initial positions
    const containerRect = iconsContainer ? iconsContainer.getBoundingClientRect() : { width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0 };
    const iconWidth = icon.getBoundingClientRect().width;
    const iconHeight = icon.getBoundingClientRect().height;

    const randomLeft = Math.random() * (containerRect.width - iconWidth);
    const randomTop = Math.random() * (containerRect.height - iconHeight);

    (icon as HTMLElement).style.left = `${randomLeft}px`;
    (icon as HTMLElement).style.top = `${randomTop}px`;

    // Assign random values for animation properties
    (icon as HTMLElement).style.setProperty('--random-duration', Math.random().toFixed(2)); // Random duration multiplier (0.00 to 1.00)
    (icon as HTMLElement).style.setProperty('--random-delay', Math.random().toFixed(2)); // Random delay multiplier (0.00 to 1.00)
    (icon as HTMLElement).style.setProperty('--random-x', Math.random().toFixed(2)); // Random horizontal movement multiplier
    (icon as HTMLElement).style.setProperty('--random-y', Math.random().toFixed(2)); // Random vertical movement multiplier
  });

  let isDragging = false;
  let currentIcon: HTMLElement | null = null;
  let offsetX = 0, offsetY = 0;

  draggableIcons.forEach((icon) => {
    icon.addEventListener('mousedown', (e) => {
      isDragging = true;
      currentIcon = icon as HTMLElement;
      offsetX = (e as MouseEvent).clientX - icon.getBoundingClientRect().left;
      offsetY = (e as MouseEvent).clientY - icon.getBoundingClientRect().top;
      (icon as HTMLElement).style.cursor = 'grabbing';
      (icon as HTMLElement).style.zIndex = '100'; // Bring dragged icon to the front
      (icon as HTMLElement).style.animation = 'none'; // Stop animation while dragging
    });
  });

  document.addEventListener('mousemove', (e) => {
    if (!isDragging || !currentIcon) return;

    const containerRect = iconsContainer ? iconsContainer.getBoundingClientRect() : { width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0 };
    const iconRect = currentIcon.getBoundingClientRect();

    // Calculate new position
    let newLeft = e.clientX - offsetX;
    let newTop = e.clientY - offsetY;

    // Constrain within container boundaries
    if (newLeft < containerRect.left) newLeft = containerRect.left;
    if (newTop < containerRect.top) newTop = containerRect.top;
    if (newLeft + iconRect.width > containerRect.right)
      newLeft = containerRect.right - iconRect.width;
    if (newTop + iconRect.height > containerRect.bottom)
      newTop = containerRect.bottom - iconRect.height;

    // Apply new position
    currentIcon.style.left = `${newLeft - containerRect.left}px`;
    currentIcon.style.top = `${newTop - containerRect.top}px`;
  });

  document.addEventListener('mouseup', () => {
    isDragging = false;
    if (currentIcon) {
      currentIcon.style.cursor = 'grab';
      currentIcon.style.zIndex = '10'; // Reset z-index
      currentIcon.style.animation = ''; // Resume animation
      currentIcon = null;
    }
  });
</script>